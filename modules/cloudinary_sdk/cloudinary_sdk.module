<?php

/**
 * @file
 * File for the Cloudinary SDK module.
 */

use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\cloudinary_sdk\CloudinarySdkConstantsInterface;

/**
 * Implements hook_libraries_info().
 */
function cloudinary_sdk_libraries_info() {
  return [
    'cloudinary' => [
      'name' => 'Cloudinary SDK for PHP',
      'vendor url' => 'http://cloudinary.com/',
      'download url' => 'https://github.com/cloudinary/cloudinary_php',
      'path' => 'src',
      'version arguments' => [
        'file' => '/vendor/cloudinary/cloudinary_php/src/Cloudinary.php',
        'pattern' => '/const VERSION = "(.*)";/',
        'lines' => 13,
      ],
      'files' => [
        'php' => [
          'Cloudinary.php',
          'Uploader.php',
          'Api.php',
        ],
      ],
      'callbacks' => [
        // Initialize cloudinary sdk after the library is loaded.
        'post-load' => [
          'cloudinary_sdk_callback',
        ],
      ],
    ],
  ];
}

/**
 * Initialize cloudinary sdk after the library is loaded.
 */
function cloudinary_sdk_callback(&$library, $version = NULL, $variant = NULL) {
  $initialized = &drupal_static(__FUNCTION__, FALSE);

  if ($initialized !== TRUE) {
    $initialized = cloudinary_sdk_init();
  }

  return $initialized;
}

/**
 * Cloudinary configuration initialization.
 */
function cloudinary_sdk_init($config = []) {
  if (empty($config)) {
    $config = cloudinary_sdk_config_load();
  }

  if (!empty($config)) {
    \Cloudinary::config($config);
    return TRUE;
  }

  return FALSE;
}

/**
 * Load the cloudinary api settings from variables.
 *
 * @return array
 *   API configuration of cloudinary.
 */
function cloudinary_sdk_config_load() {
  $config = [];

  $cloud_name = \Drupal::config('cloudinary_sdk.settings')
    ->get('cloudinary_sdk_cloud_name');
  $api_key = \Drupal::config('cloudinary_sdk.settings')
    ->get('cloudinary_sdk_api_key');
  $api_secret = \Drupal::config('cloudinary_sdk.settings')
    ->get('cloudinary_sdk_api_secret');

  if ($cloud_name && $api_key && $api_secret) {
    $config = [
      'cloud_name' => $cloud_name,
      'api_key' => $api_key,
      'api_secret' => $api_secret,
    ];
  }

  return $config;
}

/**
 * The status of "CLOUDINARY SDK for PHP".
 */
function cloudinary_sdk_check($ver = FALSE) {
  $status = $version = $error_message = '';

  if (!class_exists('\Cloudinary')) {
    $status = CloudinarySdkConstantsInterface::CLOUDINARY_SDK_NOT_LOADED;
    $error_message = 'Cloudinary SDK not found';
  }
  elseif (\Cloudinary::VERSION && version_compare(\Cloudinary::VERSION, CloudinarySdkConstantsInterface::CLOUDINARY_SDK_MINIMUM_VERSION) < 0) {
    $status = CloudinarySdkConstantsInterface::CLOUDINARY_SDK_OLD_VERSION;
    $version = \Cloudinary::VERSION;
  }
  else {
    $status = CloudinarySdkConstantsInterface::CLOUDINARY_SDK_LOADED;
    $version = \Cloudinary::VERSION;
  }

  return $ver ? [$status, $version, $error_message] : $status;
}

/**
 * Implements hook_help().
 */
function cloudinary_sdk_help($route_name) {

  $renderer = \Drupal::service('renderer');

  $logo = [
    '#theme' => 'image',
    '#uri' => drupal_get_path('module', 'cloudinary_sdk') . '/images/logo.png',
    '#alt' => 'Cloudinary Logo',
    '#width' => '344',
    '#height' => '76',
  ];
  $logo_image = $renderer->render($logo);

  $api = [
    '#theme' => 'image',
    '#uri' => drupal_get_path('module', 'cloudinary_sdk') . '/images/api.png',
    '#alt' => 'Cloudinary Logo',
    '#width' => '600',
    '#height' => '249',
  ];
  $api_image = $renderer->render($api);


  $output = '';
  $url = Url::fromUri('http://www.cloudinary.com/');
  $url_console = Url::fromUri('http://www.cloudinary.com/console');

  switch ($route_name) {
    case 'help.page.cloudinary_sdk':
      $output .= '<p>' . Link::fromTextAndUrl($logo_image, $url)->toString() . '</p>';
      $output .= '<h3>' . t('Features') . '</h3>';
      $output .= '<ul>';
      $output .= '<li>' . t("Image upload - Securely upload images or any other file, at any scale from any source. API for fast upload directly from your user's browsers or mobile apps.") . '</li>';
      $output .= '<li>' . t('Cloud storage - Store as many images as needed. Our image hosting service stores images privately and safely with automatic backup and historical revisions.') . '</li>';
      $output .= '<li>' . t('Powerful administration - Manage your media library interactively with our Digital Asset Management solution or via APIs. Gain insights using advanced analytics.') . '</li>';
      $output .= '<li>' . t('Image manipulation - Manipulate your images dynamically to fit any graphics design. Apply effects, resizing, cropping, face detection, watermarks and tons of image processing capabilities.') . '</li>';
      $output .= '<li>' . t("Fast delivery - Get your images delivered lightning-fast, responsive and highly optimized for any device in any location. Images are served via Akamai's worldwide CDN.") . '</li>';
      $output .= '</ul>';
      break;

    case 'cloudinary_sdk.settings':
      $output .= '<p>' . Link::fromTextAndUrl($logo_image, $url)->toString() . '</p>';
      $output .= '<h3>' . t('API account') . '</h3>';
      $output .= '<p>' . t('You can get the correct cloud name, API key and API secret on your account page.') . '</p>';
      $output .= '<p>' . Link::fromTextAndUrl($api_image, $url_console)->toString() . '</p>';
      break;
  }

  return $output;
}
